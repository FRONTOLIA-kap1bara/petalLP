---
// Main layout component that provides the base HTML structure
interface Props {
  title: string;
  description?: string;
}

const { title, description = "ペタルエンターテインメント - あなた好みにカスタマイズできる契約形態！" } = Astro.props;
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/images/petal-logo.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    
    <!-- AOS Animation Library -->
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  </head>
  <body>
    <slot />
    
    <!-- Initialize AOS animation library -->
    <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        AOS.init({
          duration: 800,
          easing: 'ease-out',
          once: false,
        });
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    /* Color variables */
    --color-primary: #e63946;
    --color-primary-light: #ff6b8b;
    --color-primary-lighter: #ffb7c5;
    --color-secondary: #f1faee;
    --color-accent: #a8dadc;
    --color-dark: #1d3557;
    --color-text: #2f4f4f;
    --color-text-light: #457b9d;
    --color-background: #fff;
    
    /* Spacing system (8px) */
    --space-2xs: 0.25rem; /* 4px */
    --space-xs: 0.5rem;   /* 8px */
    --space-sm: 1rem;     /* 16px */
    --space-md: 1.5rem;   /* 24px */
    --space-lg: 2rem;     /* 32px */
    --space-xl: 3rem;     /* 48px */
    --space-2xl: 4rem;    /* 64px */
  }
  
  *, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  html {
    font-family: 'Noto Sans JP', 'Poppins', sans-serif;
    scroll-behavior: smooth;
  }
  
  body {
    color: var(--color-text);
    background-color: var(--color-background);
    line-height: 1.5;
    overflow-x: hidden;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    line-height: 1.2;
  }
  
  a {
    color: inherit;
    text-decoration: none;
  }
  
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  /* Container class for consistent spacing */
  .container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-sm);
  }
  
  /* Section spacing */
  section {
    padding: var(--space-xl) 0;
  }
  
  /* Utility classes */
  .text-center {
    text-align: center;
  }
  
  .section-title {
    font-size: clamp(1.75rem, 5vw, 2.5rem);
    margin-bottom: var(--space-lg);
    position: relative;
    display: inline-block;
  }
  
  .section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60%;
    height: 4px;
    background: var(--color-primary);
    border-radius: 2px;
  }
  
  .btn {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-weight: 600;
    transition: all 0.3s ease;
    cursor: pointer;
    text-align: center;
  }
  
  .btn-primary {
    background: var(--color-primary);
    color: white;
    box-shadow: 0 4px 15px rgba(230, 57, 70, 0.3);
  }
  
  .btn-primary:hover {
    background: var(--color-primary-light);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(230, 57, 70, 0.4);
  }
  
  .grid {
    display: grid;
    gap: var(--space-md);
  }
  
  /* Responsive grid columns */
  @media (min-width: 768px) {
    .grid-2 {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .grid-3 {
      grid-template-columns: repeat(3, 1fr);
    }
    
    .grid-4 {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  
  /* Animation classes */
  .fade-in {
    animation: fadeIn 1s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  .bounce {
    animation: bounce 2s infinite;
  }
  
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-10px); }
  }
</style>